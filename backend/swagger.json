{
  "openapi": "3.0.2",
  "info": {
    "title": "Doctors API TARpe22",
    "version": "1.0.0"
  },
  "paths": {
    "/doctors": {
      "get": {
        "tags": ["Doctors"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/doctorListItem"
                  }
                },
                "examples": {
                  "List of doctors": {
                    "value": [
                      { "id": 1, "name": "Jane Doe", "rating": 4 },
                      { "id": 2, "name": "Joe Doe", "rating": 5 }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "Get all doctors"
      },
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdoctor"
              },
              "examples": {
                "Newdoctor": {
                  "value": {
                    "name": "Jane Doe",
                    "rating": 4,
                    "contact": ""
                  }
                },
                "doctorWithoutRating": {
                  "value": {
                    "name": "Jane Doe",
                    "contact": ""
                  }
                }
              }
            }
          }
        },
        "tags": ["Doctors"],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "location": {
                "schema": { "type": "string" },
                "description": "Location of created object"
              }
            },
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/doctor" }
              }
            }
          }
        },
        "summary": "Add a new doctor"
      }
    },
    "/doctors/{id}": {
      "get": {
        "tags": ["Doctors"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the doctor being requested",
            "schema": { "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/doctor" },
                "examples": {
                  "One doctor": {
                    "value": {
                      "id": 1,
                      "name": "Jane Doe",
                      "rating": 4,
                      "contact": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request path parameter",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Doctor not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "summary": "Get a doctor by ID"
      },
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Newdoctor" }
            }
          }
        },
        "tags": ["Doctors"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the doctor to be modified",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/doctor" }
              }
            }
          }
        },
        "summary": "Modify an existing doctor"
      },
      "delete": {
        "tags": ["Doctors"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the doctor to be deleted",
            "schema": { "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "Doctor deleted" },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Doctor not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "summary": "Delete a doctor"
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/userListItem"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all users"
      },
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Newuser" }
            }
          }
        },
        "tags": ["Users"],
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/user" }
              }
            }
          }
        },
        "summary": "Add a new user"
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the user being requested",
            "schema": { "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/user" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "summary": "Get a user by ID"
      },
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Newuser" }
            }
          }
        },
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the user to be modified",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/user" }
              }
            }
          }
        },
        "summary": "Modify an existing user"
      },
      "delete": {
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the user to be deleted",
            "schema": { "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "User deleted" },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "summary": "Delete a user by ID"
      }
    },
    "/comments": {
      "get": {
        "tags": ["Comments"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/comment"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all comments"
      },
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Newcomment" }
            }
          }
        },
        "tags": ["Comments"],
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/comment" }
              }
            }
          }
        },
        "summary": "Add a new comment"
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the comment being requested",
            "schema": { "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/comment" }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "summary": "Get a comment by ID"
      },
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Newcomment" }
            }
          }
        },
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the comment to be modified",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/comment" }
              }
            }
          }
        },
        "summary": "Modify an existing comment"
      },
      "delete": {
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the comment to be deleted",
            "schema": { "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "Comment deleted" },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "summary": "Delete a comment"
      }
    }
  },
  "components": {
    "schemas": {
      "doctorListItem": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "rating": { "type": "integer" }
        }
      },
      "doctor": {
        "title": "Root Type for doctor",
        "description": "",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "rating": { "type": "integer" },
          "contact": { "type": "string" }
        }
      },
      "Newdoctor": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "rating": { "type": "integer" },
          "contact": { "type": "string" }
        }
      },
      "userListItem": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "contact": { "type": "string" }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "contact": { "type": "string" }
        }
      },
      "Newuser": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "contact": { "type": "string" }
        }
      },
      "comment": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "comment": { "type": "string" },
          "userId": { "type": "integer" },
          "doctorId": { "type": "integer" }
        }
      },
      "Newcomment": {
        "type": "object",
        "properties": {
          "comment": { "type": "string" },
          "userId": { "type": "integer" },
          "doctorId": { "type": "integer" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      }
    }
  }
}
